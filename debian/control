Source: libgc
Maintainer: Christoph Egger <christoph@debian.org>
Section: libs
Priority: standard
Build-Depends: debhelper (>= 9),
 dh-autoreconf,
 autotools-dev,
 libatomic-ops-dev (>= 7.3~),
 pkg-config,
 pkg-kde-tools
Standards-Version: 3.9.4
Homepage: http://www.hpl.hp.com/personal/Hans_Boehm/gc/
Vcs-Git: git://git.debian.org/git/collab-maint/libgc.git
Vcs-Browser: http://git.debian.org/?p=collab-maint/libgc.git;a=summary

Package: libgc1c2
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends}, ${shlibs:Depends}
Conflicts: libgc1
Replaces: libgc1, libgc1c3
Multi-Arch: same
Description: conservative garbage collector for C and C++
 Boehm-Demers-Weiser's GC is a garbage collecting storage allocator that is
 intended to be used as a plug-in replacement for C's malloc or C++'s new().
 .
 It allows you to allocate memory basically as you normally would without
 explicitly deallocating memory that is no longer useful. The collector
 automatically recycles memory when it determines that it can no longer be
 used.
 .
 This version of the collector is thread safe, has C++ support and uses the
 defaults for everything else. However, it does not work as a drop-in malloc(3)
 replacement.

Package: libgc-dev
Architecture: any
Priority: optional
Section: libdevel
Depends: ${misc:Depends}, libgc1c2 (= ${binary:Version}), libc-dev
Multi-Arch: same
Description: conservative garbage collector for C (development)
 Boehm-Demers-Weiser's GC is a garbage collecting storage allocator that is
 intended to be used as a plug-in replacement for C's malloc or C++'s new().
 .
 It allows you to allocate memory basically as you normally would without
 explicitly deallocating memory that is no longer useful. The collector
 automatically recycles memory when it determines that it can no longer be
 used.
 .
 This version of the collector is thread safe, has C++ support and uses the
 defaults for everything else. However, it does not work as a drop-in malloc(3)
 replacement.
 .
 This package is required to compile and link programs that use libgc1c2.
