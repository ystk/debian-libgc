From 83231d0ab5ed60015797c3d1ad9056295ac3b2bb Mon Sep 17 00:00:00 2001
From: Hans Boehm <Hans.Boehm@hp.com>
Date: Thu, 15 Mar 2012 21:09:05 +0400
Subject: [PATCH] Speedup calloc size overflow check by preventing division if
 small values

* malloc.c (GC_SQRT_SIZE_MAX): New macro.
* malloc.c (calloc): Add fast initial size overflow check to avoid
integer division for reasonably small values passed.
---
 malloc.c |    5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

Index: libgc/malloc.c
===================================================================
--- libgc.orig/malloc.c	2012-07-08 17:54:21.530370090 +0200
+++ libgc/malloc.c	2012-07-08 17:54:21.000000000 +0200
@@ -351,9 +351,12 @@
 # define GC_SIZE_MAX (~(size_t)0)
 #endif
 
+#define GC_SQRT_SIZE_MAX ((1U << (WORDSZ / 2)) - 1)
+
 void * calloc(size_t n, size_t lb)
 {
-    if (lb && n > GC_SIZE_MAX / lb)
+    if ((lb | n) > GC_SQRT_SIZE_MAX /* fast initial test */
+        && lb && n > GC_SIZE_MAX / lb)
       return NULL;
 #   if defined(GC_LINUX_THREADS) /* && !defined(USE_PROC_FOR_LIBRARIES) */
 	/* libpthread allocated some memory that is only pointed to by	*/
